{
	"nodes":[
		{"id":"d04ab1071ca52ac6","type":"text","text":"1. **算法部分**\n    \n    - [x] **动态规划**：常考背包问题、最长子序列、路径规划等，多出现在压轴题。\n        \n    - [x] **搜索算法**：DFS（深度优先搜索）和 BFS（广度优先搜索），用于迷宫、路径查找等问题。\n        \n    - [ ] **贪心算法**：区间调度、最小生成树（Prim/Kruskal）等，需注意策略证明。\n        \n    - **递归与分治**：解决复杂问题的分步拆解，如归并排序、快速幂。\n        \n    - **回溯算法**：排列组合、八皇后问题等，需掌握剪枝优化。\n        \n2. **数据结构**\n\t- [x] 队列\n\t- [x] 栈\n\t- [x] 链表\n\t- [ ] 并查集\n\t- [ ] 二叉堆与对顶堆\n\t- [ ] 树状数组与线段树\n\t- [ ] 线段树\n    \n    - [ ] **数组与字符串**：高频考点，涉及排序、查找、双指针技巧等。\n        \n    - [ ] **树结构**：二叉树遍历（前序、中序、层次遍历）、二叉搜索树操作。\n        \n    - **栈与队列**：括号匹配、BFS实现等场景。\n        \n    - [ ] **图结构**：邻接表/矩阵表示，拓扑排序等。\n        \n3. **STL库应用**\n    \n    - **容器类**：`vector`、`map`（哈希表）、`set`、`priority_queue`（堆）。\n        \n    - **算法函数**：`sort`（排序）、`lower_bound`（二分查找）等。\n        \n4. **数学与数论**\n    \n    - [x] **基础数论**：素数判断、最大公约数（GCD）、快速幂取模。\n        \n    - [ ] **组合数学**：排列组合公式、递推关系（如卡特兰数）。\n        \n5. **图论算法**\n    \n    - [ ] **最短路径**：Dijkstra（单源）、Floyd-Warshall（多源）。\n        \n    - [ ] **最小生成树**：Prim 和 Kruskal 算法的实现与优化。\n        \n6. **排序与查找**\n    \n    - **快速排序/归并排序**：手写实现或分析时间复杂度。\n        \n    - [ ] **二分查找**：变形题（如旋转数组查找）。\n        \n7. **字符串处理**\n    \n    - **常规操作**：子串匹配、分割、反转等。\n        \n    - **高级算法**：KMP（较少但需了解思想）。\n        \n8. **输入输出与文件操作**\n    \n    - 多组数据读取、边界处理、大数运算技巧。\n        \n9. **其他考点**\n    \n    - **位运算**：异或、位移优化（如状态压缩）。\n        \n    - **并查集**：处理集合合并与连通性问题。\n        \n    - **模拟题**：日期计算、进制转换等，需细心实现。\n        \n\n### 备考建议：\n\n- **优先掌握动态规划和搜索算法**，覆盖大部分中高难度题目。\n    \n- **熟练使用STL**，提升编码效率，尤其在时间紧张的竞赛中。\n    \n- **注重数论基础**，快速幂、模运算等常隐含在优化问题中。\n    \n- **多练习真题**，熟悉出题风格，尤其是蓝桥杯经典的“模拟+算法”混合题型。","x":-331,"y":-764,"width":300,"height":434},
		{"id":"3336db2e3cb330f1","type":"text","text":"模板","x":135,"y":-1101,"width":250,"height":60},
		{"id":"2fa5b178a46d0b7b","type":"text","text":"刷题","x":135,"y":-1000,"width":250,"height":60},
		{"id":"bc66d568cdf632b0","type":"text","text":"理论","x":135,"y":-1261,"width":250,"height":50},
		{"id":"6c9046ac5ef78950","type":"text","text":"实现","x":135,"y":-1186,"width":250,"height":50},
		{"id":"8fb38d1f4877b57f","type":"file","file":"docs/🧠算法/算法-目录.md","x":-331,"y":-1271,"width":400,"height":400},
		{"id":"7ef87b6f83cf0c92","type":"text","text":"1. **数据结构**\n\t- 队列\n\t- 栈\n\t- 链表\n\t- 并查集\n\t- 二叉堆与对顶堆\n\t- 树状数组与线段树\n\t- 线段树","x":10,"y":-610,"width":250,"height":280},
		{"id":"5e5f17f2796c51e7","type":"text","text":"- [x] dp\n贪心\n并查集\n图\n- [ ] 二叉树\n字符串\n组合数学\n图论算法\n位运算\n模拟","x":340,"y":-630,"width":250,"height":320},
		{"id":"71b6d05fc228491b","type":"text","text":"数据结构\ndp\n- [x] 深搜广搜\n贪心\n二分\n数论\n图论\n树","x":135,"y":-871,"width":250,"height":207}
	],
	"edges":[
		{"id":"2e670e873dc4bbfb","fromNode":"2fa5b178a46d0b7b","fromSide":"right","toNode":"3336db2e3cb330f1","toSide":"right"},
		{"id":"035eda9edbce1d50","fromNode":"3336db2e3cb330f1","fromSide":"bottom","toNode":"2fa5b178a46d0b7b","toSide":"top"},
		{"id":"58bb80f59c966e38","fromNode":"6c9046ac5ef78950","fromSide":"bottom","toNode":"3336db2e3cb330f1","toSide":"top"},
		{"id":"dbcc48056150dd55","fromNode":"bc66d568cdf632b0","fromSide":"bottom","toNode":"6c9046ac5ef78950","toSide":"top"}
	]
}